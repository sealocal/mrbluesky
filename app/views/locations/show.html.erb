<p style="color: green"><%= notice %></p>

<h1>Location</h1>

<p>Your Location Query (address, zip, city, etc.): <strong><%= @location.query %></strong></p>

<div id="weather" style="display: inline-block; float: left;">
    <h2>Current Weather</h2>
    <%# If record updated timestamp is more than 2 minutes in the past, then show a message %>
    <% if @location.updated_at < 2.minutes.ago %>
        <p><small>last updated <%= @location.updated_at %></small></p>
    <% end %>

    <% current_weather = @location.weather && @location.weather["currentWeather"] %>
    <% if current_weather %>
        Condition: <%= current_weather["conditionCode"] %>
        <p>Temp: <%= current_weather["temperature"].round %> (in deg Celsius)</p>
        <p>Humidity: <%= (current_weather["humidity"] * 100).round %> %</p>
        <p>Wind Speed: <%= current_weather["windSpeed"].round %> km/h</p>
    <% else %>
        <p>There was a problem fetching current weather conditions.</p>
    <% end %>

    <h2>Daily Forecast</h2>

    <table>
        <th>Date</th><th>hi (C)</th><th>low (C)</th><th>conditions</th>
        <% daily_weather = @location.weather && @location.weather["forecastDaily"] %>
        <% if current_weather %>
            <% daily_weather["days"].each do |day| %>
                <tr>
                    <td><%= Time.parse(day["forecastStart"]).strftime("%m/%d") %></td>
                    <td><%= day["temperatureMax"].round %></td>
                    <td><%= day["temperatureMin"].round %></td>
                    <%# TODO: Display an icon for the conditionCode (inferred from the WeatherCondition) %>
                    <td><%= day["daytimeForecast"]["conditionCode"] %></td>
                </tr>
            <% end %>
        <% else %>
            <p>There was a problem fetching the daily forecast.</p>
        <% end %>
    </table>
</div>

<br />

<div id="map" style="display: inline-block"></div>

<% result = @location.results.try(:first) %>
<% if result && result["coordinate"] %>
    <script>
        const tokenID = "<%= WeatherKit::JWT.call %>";
        mapkit.init({
            authorizationCallback: function(done) {
                done(tokenID);
            }
        });

        const region = new mapkit.CoordinateRegion(
            new mapkit.Coordinate(<%= result["coordinate"]["latitude"] %>, <%= result["coordinate"]["longitude"] %>),
            new mapkit.CoordinateSpan(0.167647972, 0.354985255)
        );

        // Create a map in the element whose ID is "map"
        const map = new mapkit.Map("map");
        map.region = region;
    </script>
<% end %>
